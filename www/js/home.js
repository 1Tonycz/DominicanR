/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./scripts/home.js":
/*!*************************!*\
  !*** ./scripts/home.js ***!
  \*************************/
/***/ (() => {

eval("/**\n * Init drag & drop areas, preview generation and image deletion.\n */\ndocument.addEventListener('DOMContentLoaded', () => {\n    const mainInput = document.getElementById('mainImageInput');\n    const mainDrop = document.getElementById('main-drop-area');\n    const mainPreview = document.getElementById('main-preview');\n\n    const galleryInput = document.getElementById('galleryInput');\n    const galleryDrop = document.getElementById('gallery-drop-area');\n    const galleryPreview = document.getElementById('gallery-preview');\n\n    if (mainInput && mainDrop && mainPreview) {\n        initSingleUpload(mainInput, mainDrop, mainPreview);\n    }\n\n    if (galleryInput && galleryDrop && galleryPreview) {\n        initMultiUpload(galleryInput, galleryDrop, galleryPreview);\n    }\n\n    initExistingDeletes();\n});\n\n/**\n * Single file upload (main image)\n */\nfunction initSingleUpload(input, dropArea, previewList) {\n    const dt = new DataTransfer();\n\n    const refresh = () => {\n        input.files = dt.files;\n    };\n\n    const setFile = (file) => {\n        dt.items.clear();\n        dt.items.add(file);\n        previewList.innerHTML = '';\n        createPreview(file, previewList, () => {\n            dt.items.clear();\n            refresh();\n        });\n        refresh();\n    };\n\n    setupDropEvents(dropArea, (files) => {\n        if (files.length) {\n            setFile(files[0]);\n        }\n    });\n\n    dropArea.addEventListener('click', () => input.click());\n    input.addEventListener('change', () => {\n        if (input.files.length) {\n            setFile(input.files[0]);\n            input.value = '';\n        }\n    });\n}\n\n/**\n * Multiple files upload (gallery)\n */\nfunction initMultiUpload(input, dropArea, previewList) {\n    const dt = new DataTransfer();\n\n    const refresh = () => {\n        input.files = dt.files;\n    };\n\n    const addFiles = (list) => {\n        Array.from(list).forEach((file) => {\n            dt.items.add(file);\n            createPreview(file, previewList, (wrapper) => {\n                const idx = Array.from(previewList.children).indexOf(wrapper);\n                dt.items.remove(idx);\n                refresh();\n            });\n        });\n        refresh();\n    };\n\n    setupDropEvents(dropArea, addFiles);\n\n    dropArea.addEventListener('click', () => input.click());\n    input.addEventListener('change', () => {\n        if (input.files.length) {\n            addFiles(input.files);\n            input.value = '';\n        }\n    });\n}\n\n/**\n * Basic drag & drop listeners\n */\nfunction setupDropEvents(dropArea, onFiles) {\n    ['dragenter', 'dragover'].forEach(evt => {\n        dropArea.addEventListener(evt, (e) => {\n            e.preventDefault();\n            dropArea.classList.add('highlight');\n        });\n    });\n    ['dragleave', 'drop'].forEach(evt => {\n        dropArea.addEventListener(evt, (e) => {\n            e.preventDefault();\n            dropArea.classList.remove('highlight');\n        });\n    });\n    dropArea.addEventListener('drop', (e) => {\n        e.preventDefault();\n        onFiles(Array.from(e.dataTransfer.files));\n    });\n}\n\n/**\n * Creates preview item with delete button\n */\nfunction createPreview(file, previewList, removeCb) {\n    const wrapper = document.createElement('div');\n    wrapper.className = 'accom-images__preview';\n\n    const img = document.createElement('img');\n    wrapper.appendChild(img);\n\n    const del = document.createElement('span');\n    del.className = 'accom-images__delete';\n    del.textContent = '×';\n    wrapper.appendChild(del);\n\n    del.addEventListener('click', (e) => {\n        e.stopPropagation();\n        if (removeCb) removeCb(wrapper);\n        wrapper.remove();\n    });\n\n    const reader = new FileReader();\n    reader.onload = (e) => {\n        img.src = e.target.result;\n    };\n    reader.readAsDataURL(file);\n\n    previewList.appendChild(wrapper);\n}\n\n/**\n * Handle delete of already uploaded images (edit form)\n */\nfunction initExistingDeletes() {\n    document.querySelectorAll('#gallery-preview .accom-images__delete').forEach(deleteBtn => {\n        deleteBtn.addEventListener('click', (e) => {\n            e.stopPropagation();\n            const imageId = deleteBtn.dataset.id;\n            if (!imageId) {\n                console.warn('Chybí data-id u obrázku');\n                return;\n            }\n\n            const wrapper = deleteBtn.closest('.accom-images__preview');\n\n            fetch(`?do=deleteImage&id=${imageId}`, {\n                method: 'POST',\n                headers: {\n                    'X-Requested-With': 'XMLHttpRequest'\n                }\n            }).then(response => {\n                if (response.ok) {\n                    wrapper.remove();\n                } else {\n                    alert('Mazání se nezdařilo.');\n                }\n            }).catch(error => {\n                console.error('Chyba požadavku:', error);\n            });\n        });\n    });\n}\n\n\n//# sourceURL=webpack://dominicanr/./scripts/home.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./scripts/home.js"]();
/******/ 	
/******/ })()
;